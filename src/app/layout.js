import "./globals.css";
import { proximaNova } from "../../utils/customFonts";
import { Lato } from "next/font/google";
import Header from "./components/common/Header";
import { Inter } from "next/font/google";
import SubscribeSection from "./components/common/SubscribeSection";
import Footer from "./components/common/Footer";
import { StoryblokProvider } from "@/app/storyblok/StoryblokProvider";
import { apiPlugin, storyblokInit } from "@storyblok/react";
import UwScriptComponent from "./user-way/UwScriptComponent ";
import Clym from "./clym/Clym";

export const fetchCache = "force-no-store";
const lato = Lato({
  weight: ["300", "400", "900", "700"],
  style: ["normal", "italic"],
  subsets: ["latin"],
  variable: "--font-proximanova",
});

export const inter = Inter({ subsets: ["latin"] });

export const metadata = {
  title: "LLW Hubsite",
  description: "Generated by @ali007",
};

const cachedFetch = (input, init) => {
  return fetch(input, {
    ...init,
    cache: process.env.NODE_ENV === "development" ? "no-store" : "force-cache",
  });
};

storyblokInit({
  accessToken: process.env.STORYBLOK_API_TOKEN,
  use: [apiPlugin],
  apiOptions: {
    fetch: cachedFetch,
  },
});

export default function RootLayout({ children }) {
  return (
    <StoryblokProvider>
      <html lang="en">
        <body
          className={`${proximaNova.variable} ${inter.variable} ${lato.variable} bg-[#E7E4DC] `}
        >
          <Clym />
          {/* <UwScriptComponent /> */}
          <Header />
          {children}
          <SubscribeSection />
          <Footer />
        </body>
      </html>
    </StoryblokProvider>
  );
}
